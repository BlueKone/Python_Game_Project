main.py
    handles how scenes are loaded, exited and how the next scene will be loaded.

battle.py
    handles the battle system
    the parameteres are: the enemies name, and true or false if special or not
    determines if the enemy or player is faster, and sets who will go first accordingly
    calculates the attacks based on the random attack ranges of weapons/enemies and their base stats
    options to: attack, defend, use item, use special, run
    calculates experience earned from each battle if player wins
    if player dies, the game ends

scenes.py
    handles defining the scenes/levels
    no parameters (but could be made to contain them)
    has a function for each scene
    has a function for parsing a text (.txt) document to split each line apart and pass pieces of the list to xprint()
    has xprint function:
        can use values from the parser or can be used by itself
        takes three mandatory parameters (name, dialogue, display) and two optional ones (textline, sourceScript)
        -optional parameters are used for debugging
        takes name and prints it with a background colour
        display parameter decides how it will be printed to the screen
        has error handlers which will crash the program if mandatory parameters are not set properly, helping debugging

player.py
    handles all the variable stats of the player
    handles the usage of player special abilities

enemy.py
    handles the creation and stats of all enemies

items.py
    handles the use and defining of items
    has functions to get items, display the players items, and to use items (in battle)

setup.py
    used to create an executable file of the program using the cxFreeze module-- use on main.py, all dependencies will be frozen as well
    run it from CMD
    using a beta version that is somewhat compatable with python 3.5.2, not the standard cxFreeze

stats.py
    used to increase the player stats on level up
